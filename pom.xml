<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.virgo.finance</groupId>
    <artifactId>loan-rule</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>loan-rule-common</module>
        <module>loan-rule-dao</module>
        <module>loan-rule-service</module>
        <module>loan-rule-api</module>
        <module>loan-rule-web</module>
    </modules>
    <name>loan-rule</name>
    <url>http://maven.apache.org</url>

    <properties>
        <!-- 项目配置 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <encoding>UTF-8</encoding>

        <!-- 插件配置 -->
        <plugin.maven.compiler.version>3.3</plugin.maven.compiler.version>
        <plugin.maven.deploy.version>2.8.2</plugin.maven.deploy.version>
        <plugin.maven.resources.version>3.0.2</plugin.maven.resources.version>
        <plugin.maven.javadoc.version>3.0.0-M1</plugin.maven.javadoc.version>
        <plugin.maven.source.version>3.0.1</plugin.maven.source.version>

        <!-- 第三方工具 -->
        <spring.boot.version>1.5.7.RELEASE</spring.boot.version>
        <dubbo.spring.boot.version>1.0.0-SNAPSHOT</dubbo.spring.boot.version>
        <mybatis.spring.boot.version>1.3.1</mybatis.spring.boot.version>
        <druid.version>1.1.2</druid.version>
        <drools.version>7.0.0.Final</drools.version>
        <spring.web.version>5.0.1.RELEASE</spring.web.version>
        <google.guava.version>19.0</google.guava.version>
        <zkclient.version>0.1</zkclient.version>
        <jackson.version>2.9.2</jackson.version>
        <logback.kafka.version>0.1.0</logback.kafka.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ..............................本项目内模块.............................. -->
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-rule-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-rule-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-rule-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-rule-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-rule-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- ..............................其他项目模块.............................. -->
            <dependency>
                <groupId>com.virgo.finance</groupId>
                <artifactId>loan-common</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <!--<version>${loan.common.version}</version>-->
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- ..............................第三方jar.............................. -->
            <!-- springBoot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>spring-boot-starter-dubbo</artifactId>
                <version>${dubbo.spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>
            <!-- druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- drools -->
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-core</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-compiler</artifactId>
                <version>${drools.version}</version>
            </dependency>

            <!-- kie -->
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-api</artifactId>
                <version>${drools.version}</version>
            </dependency>

            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.sgroschupf</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.danielwegener</groupId>
                <artifactId>logback-kafka-appender</artifactId>
                <version>${logback.kafka.version}</version>
            </dependency>

            <!--解决依赖冲突-->
			<dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.15</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 发布到德胜仓库配置 -->
    <distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
            <name>snapshot</name>
            <url>http://192.168.130.216:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>releases</id>
            <name>desbuild</name>
            <url>http://192.168.130.216:8081/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement>

    <!-- 发布到富民仓库配置 -->
    <!--<distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
            <name>snapshot</name>
            <url>http://10.2.10.22:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>releases</id>
            <name>desbuild</name>
            <url>http://10.2.10.22:8081/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement>-->

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
                <!-- 项目组内部版本控制 -->
                <loan.common.version>1.0.0-SNAPSHOT</loan.common.version>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <env>dev</env>
                <!-- 项目组内部版本控制 -->
                <loan.common.version>1.0.0-SNAPSHOT</loan.common.version>
            </properties>
        </profile>
        <profile>
            <id>pre</id>
            <properties>
                <env>dev</env>
                <!-- 项目组内部版本控制 -->
                <loan.common.version>1.0.0-SNAPSHOT</loan.common.version>
            </properties>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <env>dev</env>
                <!-- 项目组内部版本控制 -->
                <loan.common.version>1.0.0-SNAPSHOT</loan.common.version>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>loan-rule</finalName>
        <!-- 可以用maven控制激活的profile，在配置文件中@env@引用 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- springBoot插件，在Application.java 所在模块中显示添加-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.dependencies.version}</version>
                    <configuration>
                        <mainClass>com.virgo.finance.loan.rule.web.Application</mainClass>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>springloaded</artifactId>
                            <version>1.2.5.RELEASE</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- Maven默认安装的插件，这里只是修改一些默认属性，和声明版本，子pom不需要声明 start -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.maven.compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- 指定编码格式，否则在DOS下运行mvn compile命令时会默认使用GBK编码 -->
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${plugin.maven.deploy.version}</version>
                    <configuration>
                        <skip>false</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.maven.resources.version}</version>
                    <configuration>
                        <!-- 指定编码格式，否则在DOS下运行mvn compile命令时会默认使用GBK编码 -->
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- Maven默认安装的插件，这里只是修改一些默认属性，和声明版本，子pom不需要声明 end -->


                <!-- 发布doc 如果需要生成javadoc，子pom是需要在<build></build>中显示添加声明的，不过不需要指定版本号及配置，
                和dependency一样 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${plugin.maven.javadoc.version}</version>
                    <configuration>
                        <charset>${project.build.sourceEncoding}</charset>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <docencoding>${project.build.sourceEncoding}</docencoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 发布源码 如果需要deploy时将源码发布到私服，子pom需要显示声明 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugin.maven.source.version}</version>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
